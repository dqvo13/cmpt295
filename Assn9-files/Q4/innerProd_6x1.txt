// k = 6
void inner6x1unrolling(vec_ptr u, vec_ptr v, data_t *dest) {
	long i;
	long length = vec_length(u);		// size of vectors
	data_t *udata = get_vec_start(u);	// array of data_t
	data_t *vdata = get_vec_start(v);	// array of data_t
	data_t sum = (data_t) 0;		// accumulator

	// 6x1 unrolling, add 6 products at a time
	for (i = 0; i < length - 5; i += 6) {
		sum +=	(udata[i] * vdata[i]) + 
			(udata[i+1] * vdata[i+1]) + 
			(udata[i+2] * vdata[i+2]) + 
			(udata[i+3] * vdata[i+3]) + 
			(udata[i+4] * vdata[i+4]) + 
			(udata[i+5] * vdata[i+5]); 
	}

	// account for the remainder of elements in udata and vdata,
	// must add one by one, starting at whatever i we left off in
	// previous 6x1 loop
	for (; i < length; i++) {
		sum += udata[i] * vdata[i]
	}
	
	*dest = sum;

	return;
}
